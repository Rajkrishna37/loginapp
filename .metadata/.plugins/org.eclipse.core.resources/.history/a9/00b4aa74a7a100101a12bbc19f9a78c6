package com.loginapp1;

import javax.swing.*;
import java.awt.*;
import java.sql.*;

public class UserSearchPanel extends JPanel {

    private JTextField searchField;
    private JButton searchButton;
    private JPanel resultsPanel;

    public UserSearchPanel() {
        setLayout(new BorderLayout());

        JLabel header = new JLabel("🔍 Search Users by Skill", SwingConstants.CENTER);
        header.setFont(new Font("Serif", Font.BOLD, 26));
        add(header, BorderLayout.NORTH);

        JPanel searchPanel = new JPanel(new FlowLayout());
        searchField = new JTextField(20);
        searchButton = new JButton("Search");
        searchPanel.add(new JLabel("Enter skill:"));
        searchPanel.add(searchField);
        searchPanel.add(searchButton);
        add(searchPanel, BorderLayout.CENTER);

        resultsPanel = new JPanel();
        resultsPanel.setLayout(new BoxLayout(resultsPanel, BoxLayout.Y_AXIS));
        JScrollPane scrollPane = new JScrollPane(resultsPanel);
        scrollPane.setPreferredSize(new Dimension(800, 400));
        add(scrollPane, BorderLayout.SOUTH);

        searchButton.addActionListener(e -> searchUsers());
    }

    private void searchUsers() {
        String skill = searchField.getText().trim();
        if (skill.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter a skill to search!");
            return;
        }

        resultsPanel.removeAll();

        try (Connection conn = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/loginapp", "root", "root")) {

            String sql = "SELECT u.id, u.username FROM users u " +
                    "JOIN user_skills s ON u.id = s.user_id WHERE s.skill_name LIKE ?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, "%" + skill + "%");
            ResultSet rs = ps.executeQuery();

            boolean found = false;
            while (rs.next()) {
                found = true;
                int userId = rs.getInt("id");
                String username = rs.getString("username");

                JPanel userPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
                userPanel.setBorder(BorderFactory.createTitledBorder("User: " + username));

                // Show only certificate names
                PreparedStatement certPs = conn.prepareStatement(
                        "SELECT cert_name FROM user_certificates WHERE user_id=?");
                certPs.setInt(1, userId);
                ResultSet certRs = certPs.executeQuery();

                StringBuilder certs = new StringBuilder("Certificates: ");
                while (certRs.next()) {
                    certs.append(certRs.getString("cert_name")).append(", ");
                }

                if (certs.toString().endsWith(", ")) {
                    certs = new StringBuilder(certs.substring(0, certs.length() - 2));
                }

                JLabel certLabel = new JLabel(certs.toString());
                userPanel.add(certLabel);

                resultsPanel.add(userPanel);
            }

            if (!found) resultsPanel.add(new JLabel("No users found with skill: " + skill));

            resultsPanel.revalidate();
            resultsPanel.repaint();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Database Error: " + e.getMessage());
        }
    }
}
